{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEA,IAAM,EAAO,SAAS,aAAa,CAAC,SAGpC,AAFiB,SAAS,gBAAgB,CAAC,MAElC,OAAO,CAAC,SAAC,CAAlB,EACE,IAAM,EAAO,EAAG,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,OAAQ,IAE1C,EAAO,SAAS,aAAa,CAAC,OAEpC,CAAA,EAAK,WAAW,CAAG,EAEnB,EAAG,UAAU,CAAC,IAAI,CAAG,GACrB,EAAG,qBAAqB,CAAC,aAAc,EACzC,GAEA,EAAK,gBAAgB,CAAC,QAAS,SAAC,CAAhC,M,EAGE,A,C,A,C,S,C,E,G,M,O,C,G,O,E,E,C,E,EAFqB,EAAE,MAAM,CAAC,aAAa,CAAC,QAAQ,G,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,EAE3C,OAAO,CAAC,SAAC,CAAlB,EACE,GACE,AAAqB,SAArB,EAAE,MAAM,CAAC,OAAO,EAChB,AAAoB,OAApB,EAAQ,OAAO,EACf,AAA0B,SAA1B,EAAQ,KAAK,CAAC,OAAO,CACrB,CACA,EAAQ,KAAK,CAAC,OAAO,CAAG,QAExB,MACF,CAGuB,SAArB,EAAE,MAAM,CAAC,OAAO,EAChB,AAAoB,OAApB,EAAQ,OAAO,EACf,AAAsC,UAAtC,iBAAiB,GAAS,OAAO,EAEjC,CAAA,EAAQ,KAAK,CAAC,OAAO,CAAG,MAL1B,CAOF,EACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar tree = document.querySelector(\".tree\");\nvar listOfLi = document.querySelectorAll(\"li\");\nlistOfLi.forEach(function(li) {\n    var text = li.firstChild.data.replace(/\\W/gi, \"\");\n    var span = document.createElement(\"span\");\n    span.textContent = text;\n    li.firstChild.data = \"\";\n    li.insertAdjacentElement(\"afterbegin\", span);\n});\ntree.addEventListener(\"click\", function(e) {\n    var children = _to_consumable_array(e.target.parentElement.children);\n    children.forEach(function(element) {\n        if (e.target.tagName === \"SPAN\" && element.tagName === \"UL\" && element.style.display === \"none\") {\n            element.style.display = \"block\";\n            return;\n        }\n        if (e.target.tagName === \"SPAN\" && element.tagName === \"UL\" && getComputedStyle(element).display === \"block\") element.style.display = \"none\";\n    });\n});\n\n//# sourceMappingURL=index.7b4ca865.js.map\n","'use strict';\n\nconst tree = document.querySelector('.tree');\nconst listOfLi = document.querySelectorAll('li');\n\nlistOfLi.forEach((li) => {\n  const text = li.firstChild.data.replace(/\\W/gi, '');\n\n  const span = document.createElement('span');\n\n  span.textContent = text;\n\n  li.firstChild.data = '';\n  li.insertAdjacentElement('afterbegin', span);\n});\n\ntree.addEventListener('click', (e) => {\n  const children = [...e.target.parentElement.children];\n\n  children.forEach((element) => {\n    if (\n      e.target.tagName === 'SPAN' &&\n      element.tagName === 'UL' &&\n      element.style.display === 'none'\n    ) {\n      element.style.display = 'block';\n\n      return;\n    }\n\n    if (\n      e.target.tagName === 'SPAN' &&\n      element.tagName === 'UL' &&\n      getComputedStyle(element).display === 'block'\n    ) {\n      element.style.display = 'none';\n    }\n  });\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","tree","document","querySelector","listOfLi","querySelectorAll","forEach","li","text","firstChild","data","replace","span","createElement","textContent","insertAdjacentElement","addEventListener","e","children","_array_without_holes","isArray","target","parentElement","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","element","tagName","style","display","getComputedStyle"],"version":3,"file":"index.7b4ca865.js.map"}